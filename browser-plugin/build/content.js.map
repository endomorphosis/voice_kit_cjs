{"version":3,"file":"content.js","mappings":"AAIAA,QAAQC,IAAI,8BACPC,UAAUC,IAIXD,UAAUC,IAAIC,iBAAiBC,MAAKC,IAC5BA,EACAN,QAAQC,IAAI,iCAAkC,CAC1CM,KAAMD,EAAQC,KACdC,SAAUC,MAAMC,KAAKJ,EAAQE,YAGjCR,QAAQC,IAAI,sDAChB,IACDU,OAAMC,IACLZ,QAAQC,IAAI,gCAAiCW,EAAK,IAbtDZ,QAAQC,IAAI","sources":["webpack://browser-extension/./src/content.js"],"sourcesContent":["// content.js - the content script which runs in the context of web pages, and has access\r\n// to the DOM and other web APIs.\r\n\r\n// Check for WebGPU support\r\nconsole.log('Checking WebGPU support...');\r\nif (!navigator.gpu) {\r\n    console.log('WebGPU not supported, will use WASM backend');\r\n} else {\r\n    // Test WebGPU capabilities without requiring f16\r\n    navigator.gpu.requestAdapter().then(adapter => {\r\n        if (adapter) {\r\n            console.log('WebGPU supported with adapter:', {\r\n                name: adapter.name,\r\n                features: Array.from(adapter.features)\r\n            });\r\n        } else {\r\n            console.log('WebGPU adapter not available, will use WASM backend');\r\n        }\r\n    }).catch(error => {\r\n        console.log('WebGPU initialization failed:', error);\r\n    });\r\n}\r\n\r\n// Example usage for text generation:\r\n//\r\n// import { ACTION_NAME } from \"./constants.js\";\r\n// const message = {\r\n//     action: ACTION_NAME,\r\n//     text: 'Your input text here',\r\n// }\r\n// const response = await chrome.runtime.sendMessage(message);\r\n// console.log('Generated text:', response)\r\n\r\n// You can also add your own UI elements or handlers here to trigger text generation\r\n// The context menu integration is handled by background.js\r\n"],"names":["console","log","navigator","gpu","requestAdapter","then","adapter","name","features","Array","from","catch","error"],"sourceRoot":""}