{"version":3,"file":"popup.js","mappings":"AAAA;;AAEA;AACA,MAAMA,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC;;AAE/C;AACA,MAAMC,KAAK,GAAG;EACZC,WAAW,EAAE,KAAK;EAClBC,iBAAiB,EAAE,CAAC;EACpBC,aAAa,EAAE,IAAI;EACnBC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,sBAAsB,GAAG,CAAC;;AAEhC;AACA,SAASC,WAAWA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAClC,IAAI,CAACX,KAAK,CAACM,QAAQ,EAAEM,WAAW,EAAE;EAElC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CF,KAAK,CAACG,SAAS,GAAG,aAAaN,IAAI,EAAE;EACrCG,KAAK,CAACI,WAAW,GAAGN,IAAI,CAACO,GAAG,CAACC,GAAG,IAC9B,OAAOA,GAAG,KAAK,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC,GAAGA,GAClD,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EACXtB,KAAK,CAACM,QAAQ,CAACM,WAAW,CAACW,WAAW,CAACV,KAAK,CAAC;EAC7Cb,KAAK,CAACM,QAAQ,CAACM,WAAW,CAACY,QAAQ,CAAC,CAAC,EAAExB,KAAK,CAACM,QAAQ,CAACM,WAAW,CAACa,YAAY,CAAC;AACjF;;AAEA;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAI,CAACf,QAAQ,IAAI,CAACA,QAAQ,CAACgB,cAAc,EAAE;MACzCD,MAAM,CAAC,IAAIE,KAAK,CAAC,oBAAoB,CAAC,CAAC;MACvC;IACF;IAEA/B,KAAK,CAACM,QAAQ,GAAG;MACf0B,SAAS,EAAElB,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC;MAChDG,UAAU,EAAEnB,QAAQ,CAACgB,cAAc,CAAC,aAAa,CAAC;MAClDI,YAAY,EAAEpB,QAAQ,CAACgB,cAAc,CAAC,eAAe,CAAC;MACtDK,YAAY,EAAErB,QAAQ,CAACgB,cAAc,CAAC,cAAc,CAAC;MACrDM,SAAS,EAAEtB,QAAQ,CAACgB,cAAc,CAAC,QAAQ,CAAC;MAC5CO,gBAAgB,EAAEvB,QAAQ,CAACgB,cAAc,CAAC,kBAAkB,CAAC;MAC7DlB,WAAW,EAAEE,QAAQ,CAACgB,cAAc,CAAC,cAAc;IACrD,CAAC;;IAED;IACA,MAAMQ,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACxC,KAAK,CAACM,QAAQ,CAAC,CACnDmC,MAAM,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACA,KAAK,CAAC,CAChCzB,GAAG,CAAC,CAAC,CAACwB,GAAG,CAAC,KAAKA,GAAG,CAAC;IAEtB,IAAIJ,eAAe,CAACM,MAAM,GAAG,CAAC,EAAE;MAC9Bf,MAAM,CAAC,IAAIE,KAAK,CAAC,wBAAwBX,IAAI,CAACC,SAAS,CAACiB,eAAe,CAAC,EAAE,CAAC,CAAC;MAC5E;IACF;;IAEA;IACAtC,KAAK,CAACM,QAAQ,CAAC6B,YAAY,EAAEU,gBAAgB,CAAC,OAAO,EAAEC,eAAe,CAAC;IACvE9C,KAAK,CAACM,QAAQ,CAAC2B,UAAU,EAAEY,gBAAgB,CAAC,OAAO,EAAEE,gBAAgB,CAAC;IAEtEnB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,CAAC;AACJ;;AAEA;AACA,eAAeoB,OAAOA,CAAA,EAAG;EACvB,IAAIhD,KAAK,CAACK,MAAM,EAAE;IAChB4C,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C;EACF;EAEA,IAAI;IACF;IACA,MAAMC,QAAQ,GAAGtD,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,EAAE,CAAC;IAC1C,MAAMqD,SAAS,GAAGvD,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IAExDC,KAAK,CAACK,MAAM,GAAG,IAAIgD,MAAM,CAACD,SAAS,EAAE;MACnC1C,IAAI,EAAE,QAAQ;MACd4C,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,OAAO,IAAI3B,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAM0B,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BC,aAAa,CAAC,CAAC;QACf5B,MAAM,CAAC,IAAIE,KAAK,CAAC,qCAAqC,CAAC,CAAC;MAC1D,CAAC,EAAE,KAAK,CAAC;MAET/B,KAAK,CAACK,MAAM,CAACqD,SAAS,GAAIC,KAAK,IAAK;QAClC,MAAM;UAAEjD,IAAI;UAAEkD,IAAI;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGH,KAAK,CAACG,IAAI;QAC9C,QAAQpD,IAAI;UACV,KAAK,OAAO;YACVuC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;YAC/Ba,YAAY,CAACR,OAAO,CAAC;YACrBS,eAAe,CAAC,CAAC;YACjBpC,OAAO,CAAC,CAAC;YACT;UACF,KAAK,eAAe;YAClBqC,mBAAmB,CAACL,IAAI,CAAC;YACzB;UACF,KAAK,SAAS;YACZM,YAAY,CAAC;cAAEC,MAAM,EAAE,SAAS;cAAEC,QAAQ,EAAEN;YAAK,CAAC,CAAC;YACnD;UACF,KAAK,OAAO;YACVb,OAAO,CAACY,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;YAClCpD,WAAW,CAAC,OAAO,EAAE,aAAa,GAAGoD,KAAK,CAAC;YAC3C;QACJ;MACF,CAAC;MAED7D,KAAK,CAACK,MAAM,CAACgE,OAAO,GAAIR,KAAK,IAAK;QAChCZ,OAAO,CAACY,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCpD,WAAW,CAAC,OAAO,EAAE,oBAAoB,GAAGoD,KAAK,CAACS,OAAO,CAAC;QAC1DP,YAAY,CAACR,OAAO,CAAC;QACrBE,aAAa,CAAC,CAAC;QACf5B,MAAM,CAACgC,KAAK,CAAC;MACf,CAAC;;MAED;MACA7D,KAAK,CAACK,MAAM,CAACkE,WAAW,CAAC;QACvB7D,IAAI,EAAE,MAAM;QACZd;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOiE,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/CpD,WAAW,CAAC,OAAO,EAAE,2CAA2C,GAAGoD,KAAK,CAACS,OAAO,CAAC;IACjFE,gBAAgB,CAAC,CAAC;IAClB,MAAMX,KAAK;EACb;AACF;;AAEA;AACA,eAAeY,eAAeA,CAAA,EAAG;EAC/B,IAAI;IACF,MAAM5E,MAAM,CAACC,OAAO,CAAC4E,WAAW,CAAC;MAAEhE,IAAI,EAAE;IAAe,CAAC,CAAC;IAC1DV,KAAK,CAACC,WAAW,GAAG,IAAI;IACxBD,KAAK,CAACE,iBAAiB,GAAG,CAAC;IAC3B,OAAO,IAAI;EACb,CAAC,CAAC,OAAO2D,KAAK,EAAE;IACdZ,OAAO,CAAC0B,IAAI,CAAC,mBAAmB,EAAEd,KAAK,CAAC;IACxC7D,KAAK,CAACC,WAAW,GAAG,KAAK;IAEzB,IAAID,KAAK,CAACE,iBAAiB,GAAGM,sBAAsB,EAAE;MACpDR,KAAK,CAACE,iBAAiB,EAAE;MACzB+C,OAAO,CAACC,GAAG,CAAC,kCAAkClD,KAAK,CAACE,iBAAiB,EAAE,CAAC;MACxE,MAAM,IAAIyB,OAAO,CAACC,OAAO,IAAI4B,UAAU,CAAC5B,OAAO,EAAE,IAAI,GAAG5B,KAAK,CAACE,iBAAiB,CAAC,CAAC;MACjF,OAAOuE,eAAe,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLP,YAAY,CAAC;QACXC,MAAM,EAAE,OAAO;QACfL,IAAI,EAAE;MACR,CAAC,CAAC;MACF,OAAO,KAAK;IACd;EACF;AACF;;AAEA;AACAjE,MAAM,CAACC,OAAO,CAAC8E,SAAS,CAACC,WAAW,CAAC,CAACP,OAAO,EAAEQ,MAAM,EAAEC,YAAY,KAAK;EACtE9B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEoB,OAAO,CAAC;EAC/CtE,KAAK,CAACC,WAAW,GAAG,IAAI;EACxBiE,YAAY,CAACI,OAAO,CAAC;AACvB,CAAC,CAAC;AAEF,SAASJ,YAAYA,CAACI,OAAO,EAAE;EAC7B,MAAMU,QAAQ,GAAGlE,QAAQ,CAACgB,cAAc,CAAC,QAAQ,CAAC;EAClD,MAAMmD,eAAe,GAAGnE,QAAQ,CAACgB,cAAc,CAAC,kBAAkB,CAAC;EACnE,MAAMoD,UAAU,GAAGpE,QAAQ,CAACgB,cAAc,CAAC,kBAAkB,CAAC;EAE9D,IAAI,CAACkD,QAAQ,IAAI,CAACC,eAAe,EAAE;EAEnCA,eAAe,CAACjE,SAAS,GAAGsD,OAAO,CAACH,MAAM;EAE1C,IAAIG,OAAO,CAACH,MAAM,KAAK,SAAS,EAAE;IAChCa,QAAQ,CAAC/D,WAAW,GAAG,kBAAkB;IACzC,IAAIqD,OAAO,CAACF,QAAQ,EAAE;MACpBc,UAAU,CAACjE,WAAW,GAAG,GAAGqD,OAAO,CAACF,QAAQ,CAACe,OAAO,CAAC,CAAC,CAAC,GAAG;IAC5D;EACF,CAAC,MAAM,IAAIb,OAAO,CAACH,MAAM,KAAK,OAAO,EAAE;IACrCa,QAAQ,CAAC/D,WAAW,GAAG,UAAUqD,OAAO,CAACR,IAAI,EAAE;IAC/CmB,eAAe,CAACjE,SAAS,GAAG,OAAO;IACnCkE,UAAU,CAACjE,WAAW,GAAG,EAAE;EAC7B,CAAC,MAAM,IAAIqD,OAAO,CAACH,MAAM,KAAK,OAAO,EAAE;IACrCa,QAAQ,CAAC/D,WAAW,GAAG,aAAa;IACpCgE,eAAe,CAACjE,SAAS,GAAG,OAAO;IACnCkE,UAAU,CAACjE,WAAW,GAAG,EAAE;EAC7B;AACF;;AAEA;AACAH,QAAQ,CAAC+B,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxDI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3B,IAAI;IACF,MAAMxB,YAAY,CAAC,CAAC;IACpB,MAAMC,OAAO,CAACyD,GAAG,CAAC,CAChBpC,OAAO,CAAC,CAAC,EACTyB,eAAe,CAAC,CAAC,CAClB,CAAC;IACFxB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;IAEtC;IACArD,MAAM,CAACC,OAAO,CAAC4E,WAAW,CAAC;MAAEhE,IAAI,EAAE;IAAe,CAAC,EAAG2E,QAAQ,IAAK;MACjE,IAAIxF,MAAM,CAACC,OAAO,CAACwF,SAAS,EAAE;QAC5BrC,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAEhE,MAAM,CAACC,OAAO,CAACwF,SAAS,CAAC;QACjE;MACF;MACA,IAAID,QAAQ,EAAElB,MAAM,KAAK,OAAO,EAAE;QAChCnE,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,OAAO;MAChD,CAAC,MAAM;QACLjB,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,iBAAiB;MAC1D;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO4C,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CpD,WAAW,CAAC,OAAO,EAAE,wBAAwB,GAAGoD,KAAK,CAACS,OAAO,CAAC;EAChE;AACF,CAAC,CAAC;;AAEF;AACA,MAAMiB,eAAe,GAAG;EACtBrC,GAAG,EAAED,OAAO,CAACC,GAAG;EAChBW,KAAK,EAAEZ,OAAO,CAACY,KAAK;EACpB2B,IAAI,EAAEvC,OAAO,CAACuC;AAChB,CAAC;AAEDvC,OAAO,CAACC,GAAG,GAAG,CAAC,GAAGvC,IAAI,KAAKF,WAAW,CAAC,MAAM,EAAE,GAAGE,IAAI,CAAC;AACvDsC,OAAO,CAACY,KAAK,GAAG,CAAC,GAAGlD,IAAI,KAAKF,WAAW,CAAC,OAAO,EAAE,GAAGE,IAAI,CAAC;AAC1DsC,OAAO,CAACuC,IAAI,GAAG,CAAC,GAAG7E,IAAI,KAAKF,WAAW,CAAC,MAAM,EAAE,GAAGE,IAAI,CAAC;;AAExD;AACA,SAAS8E,UAAUA,CAACC,OAAO,EAAEC,MAAM,GAAG,KAAK,EAAE;EAC3C,MAAMC,UAAU,GAAG9E,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAChD6E,UAAU,CAAC5E,SAAS,GAAG,WAAW2E,MAAM,GAAG,MAAM,GAAG,WAAW,EAAE;EACjEC,UAAU,CAAC3E,WAAW,GAAGyE,OAAO;EAChC1F,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACqE,UAAU,CAAC;EACnD5F,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACV,QAAQ,CAAC,CAAC,EAAExB,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACT,YAAY,CAAC;AACnF;AAEA,eAAeiD,WAAWA,CAAA,EAAG;EAC3B,MAAMd,IAAI,GAAG5D,KAAK,CAACM,QAAQ,CAAC0B,SAAS,CAACW,KAAK,CAACkD,IAAI,CAAC,CAAC;EAClD,IAAI,CAACjC,IAAI,EAAE;;EAEX;EACA,IAAI,CAAC5D,KAAK,CAACC,WAAW,IAAI,EAAC,MAAMwE,eAAe,CAAC,CAAC,GAAE;IAClD,MAAMqB,QAAQ,GAAGhF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9C+E,QAAQ,CAAC9E,SAAS,GAAG,iCAAiC;IACtD8E,QAAQ,CAAC7E,WAAW,GAAG,sDAAsD;IAC7EjB,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACuE,QAAQ,CAAC;IACjD;EACF;;EAEA;EACA,MAAMF,UAAU,GAAG9E,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAChD6E,UAAU,CAAC5E,SAAS,GAAG,cAAc;EACrC4E,UAAU,CAAC3E,WAAW,GAAG2C,IAAI;EAC7B5D,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACqE,UAAU,CAAC;;EAEnD;EACA5F,KAAK,CAACM,QAAQ,CAAC0B,SAAS,CAACW,KAAK,GAAG,EAAE;EACnC,MAAMoD,UAAU,GAAGjF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAChDgF,UAAU,CAAC/E,SAAS,GAAG,mBAAmB;EAC1C+E,UAAU,CAACC,SAAS,GAAG,8DAA8D;EACrFhG,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACwE,UAAU,CAAC;EACnD/F,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACV,QAAQ,CAAC,CAAC,EAAExB,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACT,YAAY,CAAC;EAEjF,IAAI;IACF,MAAM4D,QAAQ,GAAG,MAAM,IAAI1D,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtDhC,MAAM,CAACC,OAAO,CAAC4E,WAAW,CAAC;QACzBuB,MAAM,EAAE,UAAU;QAClBrC,IAAI,EAAEA;MACR,CAAC,EAAEyB,QAAQ,IAAI;QACb,IAAIxF,MAAM,CAACC,OAAO,CAACwF,SAAS,EAAE;UAC5BzD,MAAM,CAAC,IAAIE,KAAK,CAAClC,MAAM,CAACC,OAAO,CAACwF,SAAS,CAAChB,OAAO,CAAC,CAAC;UACnD;QACF;QACA1C,OAAO,CAACyD,QAAQ,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAU,UAAU,CAACG,MAAM,CAAC,CAAC;IAEnB,IAAIb,QAAQ,EAAExB,KAAK,EAAE;MACnB,MAAMiC,QAAQ,GAAGhF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9C+E,QAAQ,CAAC9E,SAAS,GAAG,mCAAmCqE,QAAQ,CAACxB,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,GAAG,aAAa,GAAG,EAAE,EAAE;;MAEhH;MACA,IAAIC,YAAY,GAAGf,QAAQ,CAACxB,KAAK;MACjC,IAAIwB,QAAQ,CAACxB,KAAK,CAACsC,QAAQ,CAAC,YAAY,CAAC,IAAId,QAAQ,CAACxB,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC9EC,YAAY,GAAG,uGAAuG;MACxH;MAEAN,QAAQ,CAAC7E,WAAW,GAAGmF,YAAY;MACnCpG,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACuE,QAAQ,CAAC;;MAEjD;MACA,IAAIT,QAAQ,CAACxB,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACrC,MAAME,UAAU,GAAGvF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAChDsF,UAAU,CAACrF,SAAS,GAAG,gBAAgB;QACvCqF,UAAU,CAACpF,WAAW,GAAG,gEAAgE;QACzFjB,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAAC8E,UAAU,CAAC;MACrD;IACF,CAAC,MAAM;MACL,MAAMC,WAAW,GAAGxF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACjDuF,WAAW,CAACtF,SAAS,GAAG,mBAAmB;MAC3CsF,WAAW,CAACrF,WAAW,GAAGoE,QAAQ;MAClCrF,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAAC+E,WAAW,CAAC;IACtD;EACF,CAAC,CAAC,OAAOzC,KAAK,EAAE;IACd;IACAkC,UAAU,CAACG,MAAM,CAAC,CAAC;IAEnB,MAAMJ,QAAQ,GAAGhF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9C+E,QAAQ,CAAC9E,SAAS,GAAG,iCAAiC;IACtD8E,QAAQ,CAAC7E,WAAW,GAAG,SAAS,IAAI4C,KAAK,CAACS,OAAO,IAAI,uDAAuD,CAAC;IAC7GtE,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACX,WAAW,CAACuE,QAAQ,CAAC;IACjD7C,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;IAE9C;IACAY,eAAe,CAAC,CAAC;EACnB;EAEAzE,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACV,QAAQ,CAAC,CAAC,EAAExB,KAAK,CAACM,QAAQ,CAAC4B,YAAY,CAACT,YAAY,CAAC;AACnF;;AAEA;AACA,IAAItB,aAAa,GAAG,IAAI;AACxB,IAAIoG,cAAc,GAAG,kDAAE;;AAEvB;AACA,eAAezD,eAAeA,CAAA,EAAG;EAC/B,IAAI;IACF,IAAI,CAAC9C,KAAK,CAACG,aAAa,EAAE;MACxB;MACA,MAAMqG,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UACLC,YAAY,EAAE,CAAC;UACfC,UAAU,EAAE;QACd;MACF,CAAC,CAAC;MAEF9G,KAAK,CAACG,aAAa,GAAG,IAAI4G,aAAa,CAACP,MAAM,CAAC;MAE/CxG,KAAK,CAACG,aAAa,CAAC6G,eAAe,GAAIrD,KAAK,IAAK;QAC/C,IAAIA,KAAK,CAACG,IAAI,CAACmD,IAAI,GAAG,CAAC,EAAE;UACvBjH,KAAK,CAACI,WAAW,CAAC8G,IAAI,CAACvD,KAAK,CAACG,IAAI,CAAC;QACpC;MACF,CAAC;MAED9D,KAAK,CAACG,aAAa,CAACgH,MAAM,GAAG,YAAY;QACvC,IAAI;UACF,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACrH,KAAK,CAACI,WAAW,EAAE;YAAEM,IAAI,EAAE;UAAa,CAAC,CAAC;UACrE,MAAM4G,WAAW,GAAG,MAAMF,SAAS,CAACG,WAAW,CAAC,CAAC;UACjD,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACH,WAAW,CAAC;UAE/CzH,MAAM,CAACC,OAAO,CAAC4E,WAAW,CAAC;YACzBhE,IAAI,EAAE,YAAY;YAClBkG,KAAK,EAAEc,KAAK,CAACC,IAAI,CAACH,SAAS;UAC7B,CAAC,CAAC;UAEFxH,KAAK,CAACI,WAAW,GAAG,EAAE;QACxB,CAAC,CAAC,OAAOyD,KAAK,EAAE;UACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C7D,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,2BAA2B4C,KAAK,CAACS,OAAO,EAAE;QACnF;MACF,CAAC;MAEDtE,KAAK,CAACG,aAAa,CAACyH,KAAK,CAAC,CAAC;MAC3B5H,KAAK,CAACM,QAAQ,CAAC6B,YAAY,CAAC0F,aAAa,CAAC,MAAM,CAAC,CAAC5G,WAAW,GAAG,MAAM;MACtEjB,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,cAAc;IACvD,CAAC,MAAM;MACLjB,KAAK,CAACG,aAAa,CAAC2H,IAAI,CAAC,CAAC;MAC1B9H,KAAK,CAACG,aAAa,GAAG,IAAI;MAC1BH,KAAK,CAACM,QAAQ,CAAC6B,YAAY,CAAC0F,aAAa,CAAC,MAAM,CAAC,CAAC5G,WAAW,GAAG,QAAQ;MACxEjB,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,eAAe;IACxD;EACF,CAAC,CAAC,OAAO4C,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC7D,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,UAAU4C,KAAK,CAACS,OAAO,EAAE;EAClE;AACF;AAEA,SAASb,aAAaA,CAAA,EAAG;EACvB,IAAIzD,KAAK,CAACK,MAAM,EAAE;IAChBL,KAAK,CAACK,MAAM,CAAC0H,SAAS,CAAC,CAAC;IACxB/H,KAAK,CAACK,MAAM,GAAG,IAAI;EACrB;AACF;AAEA,SAAS2D,eAAeA,CAAA,EAAG;EACzB,MAAMgE,SAAS,GAAGlH,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC;EACvD,IAAIkG,SAAS,EAAEA,SAAS,CAACC,QAAQ,GAAG,KAAK;AAC3C;AAEA,SAASzD,gBAAgBA,CAAA,EAAG;EAC1B,MAAMwD,SAAS,GAAGlH,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC;EACvD,IAAIkG,SAAS,EAAEA,SAAS,CAACC,QAAQ,GAAG,IAAI;AAC1C;AAEA,SAASC,eAAeA,CAACtE,IAAI,EAAE;EAC7B,MAAM5B,SAAS,GAAGlB,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC;EACvD,IAAIE,SAAS,EAAE;IACbA,SAAS,CAACW,KAAK,GAAG,CAACX,SAAS,CAACW,KAAK,GAAG,GAAG,GAAGiB,IAAI,EAAEiC,IAAI,CAAC,CAAC;EACzD;AACF;AAEA,SAAS5B,mBAAmBA,CAACL,IAAI,EAAE;EACjC,IAAI5D,KAAK,CAACM,QAAQ,CAAC0B,SAAS,EAAE;IAC5BhC,KAAK,CAACM,QAAQ,CAAC0B,SAAS,CAACW,KAAK,GAAG,CAAC3C,KAAK,CAACM,QAAQ,CAAC0B,SAAS,CAACW,KAAK,GAAG,GAAG,GAAGiB,IAAI,EAAEiC,IAAI,CAAC,CAAC;EACvF;EACA,IAAI7F,KAAK,CAACM,QAAQ,CAAC+B,gBAAgB,EAAE;IACnCrC,KAAK,CAACM,QAAQ,CAAC+B,gBAAgB,CAACpB,WAAW,GAAG2C,IAAI;EACpD;AACF;AAEA,SAASb,gBAAgBA,CAAA,EAAG;EAC1B,MAAMoF,KAAK,GAAGnI,KAAK,CAACM,QAAQ,CAAC0B,SAAS;EACtC,IAAI,CAACmG,KAAK,IAAI,CAACA,KAAK,CAACxF,KAAK,CAACkD,IAAI,CAAC,CAAC,EAAE;EAEnC,MAAMvB,OAAO,GAAG6D,KAAK,CAACxF,KAAK,CAACkD,IAAI,CAAC,CAAC;EAClChG,MAAM,CAACC,OAAO,CAAC4E,WAAW,CAAC;IACzBhE,IAAI,EAAE,cAAc;IACpB4D;EACF,CAAC,CAAC;EAEF6D,KAAK,CAACxF,KAAK,GAAG,EAAE;AAClB;;AAEA;AACAyF,MAAM,CAACvF,gBAAgB,CAAC,QAAQ,EAAEY,aAAa,CAAC;;AAEhD;AACA,eAAe4E,SAASA,CAAA,EAAG;EACzB,IAAI;IACF,MAAMhD,QAAQ,GAAG,MAAMiD,KAAK,CAAC,mDAAmD,CAAC;IACjF,MAAMC,IAAI,GAAG,MAAMlD,QAAQ,CAACkD,IAAI,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;IACzC,MAAMI,KAAK,GAAG7H,QAAQ,CAAC8H,gBAAgB,CAAC,mBAAmB,CAAC;IAC5DD,KAAK,CAACE,OAAO,CAACC,IAAI,IAAI;MACpBA,IAAI,CAACC,IAAI,GAAGP,OAAO;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO3E,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF;;AAEA;AACAhE,MAAM,CAACC,OAAO,CAAC8E,SAAS,CAACC,WAAW,CAAC,CAACP,OAAO,EAAEQ,MAAM,EAAEC,YAAY,KAAK;EACtE,IAAIT,OAAO,CAAC5D,IAAI,KAAK,eAAe,EAAE;IACpCV,KAAK,CAACM,QAAQ,CAAC+B,gBAAgB,CAACpB,WAAW,GAAGqD,OAAO,CAACV,IAAI;IAC1D5D,KAAK,CAACM,QAAQ,CAAC0B,SAAS,CAACW,KAAK,GAAG2B,OAAO,CAACV,IAAI;EAC/C,CAAC,MAAM,IAAIU,OAAO,CAAC5D,IAAI,KAAK,OAAO,EAAE;IACnCV,KAAK,CAACM,QAAQ,CAAC8B,SAAS,CAACnB,WAAW,GAAG,UAAUqD,OAAO,CAACT,KAAK,EAAE;EAClE;AACF,CAAC,CAAC,C","sources":["webpack://browser-extension/./src/popup.js"],"sourcesContent":["// popup.js - handles interaction with the extension's popup UI\r\n\r\n// Ensure WASM path is set correctly\r\nconst wasmPath = chrome.runtime.getURL('wasm/');\r\n\r\n// Global state management\r\nconst state = {\r\n  isConnected: false,\r\n  reconnectAttempts: 0,\r\n  mediaRecorder: null,\r\n  audioChunks: [],\r\n  worker: null,\r\n  elements: null,\r\n  recording: false\r\n};\r\n\r\nconst MAX_RECONNECT_ATTEMPTS = 3;\r\n\r\n// Utility functions\r\nfunction addLogEntry(type, ...args) {\r\n  if (!state.elements?.logMessages) return;\r\n  \r\n  const entry = document.createElement('div');\r\n  entry.className = `log-entry ${type}`;\r\n  entry.textContent = args.map(arg => \r\n    typeof arg === 'object' ? JSON.stringify(arg) : arg\r\n  ).join(' ');\r\n  state.elements.logMessages.appendChild(entry);\r\n  state.elements.logMessages.scrollTo(0, state.elements.logMessages.scrollHeight);\r\n}\r\n\r\n// Initialize UI only after DOM is fully loaded\r\nfunction initializeUI() {\r\n  return new Promise((resolve, reject) => {\r\n    if (!document || !document.getElementById) {\r\n      reject(new Error('Document not ready'));\r\n      return;\r\n    }\r\n\r\n    state.elements = {\r\n      chatInput: document.getElementById('chat-input'),\r\n      sendButton: document.getElementById('send-button'),\r\n      chatMessages: document.getElementById('chat-messages'),\r\n      recordButton: document.getElementById('recordButton'),\r\n      statusDiv: document.getElementById('status'),\r\n      transcriptionDiv: document.getElementById('transcriptionDiv'),\r\n      logMessages: document.getElementById('log-messages')\r\n    };\r\n\r\n    // Validate all elements exist\r\n    const missingElements = Object.entries(state.elements)\r\n      .filter(([key, value]) => !value)\r\n      .map(([key]) => key);\r\n\r\n    if (missingElements.length > 0) {\r\n      reject(new Error(`Missing UI elements: ${JSON.stringify(missingElements)}`));\r\n      return;\r\n    }\r\n\r\n    // Add event listeners\r\n    state.elements.recordButton?.addEventListener('click', toggleRecording);\r\n    state.elements.sendButton?.addEventListener('click', handleSendButton);\r\n    \r\n    resolve(true);\r\n  });\r\n}\r\n\r\n// Single ASR initialization function\r\nasync function initASR() {\r\n  if (state.worker) {\r\n    console.log('ASR worker already initialized');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Set the correct base URL for loading WASM files \r\n    const wasmBase = chrome.runtime.getURL('');\r\n    const workerURL = chrome.runtime.getURL('asr-worker.js');\r\n    \r\n    state.worker = new Worker(workerURL, {\r\n      type: 'module',\r\n      name: 'asr-worker'\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => {\r\n        cleanupWorker();\r\n        reject(new Error('ASR worker initialization timed out'));\r\n      }, 30000);\r\n\r\n      state.worker.onmessage = (event) => {\r\n        const { type, text, error, data } = event.data;\r\n        switch (type) {\r\n          case 'ready':\r\n            console.log('ASR worker ready');\r\n            clearTimeout(timeout);\r\n            enableMicButton();\r\n            resolve();\r\n            break;\r\n          case 'transcription':\r\n            updateTranscription(text);\r\n            break;\r\n          case 'loading':\r\n            updateStatus({ status: 'loading', progress: data });\r\n            break;\r\n          case 'error':\r\n            console.error('ASR error:', error);\r\n            addLogEntry('error', 'ASR error: ' + error);\r\n            break;\r\n        }\r\n      };\r\n\r\n      state.worker.onerror = (error) => {\r\n        console.error('ASR worker error:', error);\r\n        addLogEntry('error', 'ASR worker error: ' + error.message);\r\n        clearTimeout(timeout);\r\n        cleanupWorker();\r\n        reject(error);\r\n      };\r\n\r\n      // Send initialization message with WASM path\r\n      state.worker.postMessage({\r\n        type: 'init',\r\n        wasmPath\r\n      });\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error initializing ASR:', error);\r\n    addLogEntry('error', 'Failed to initialize speech recognition: ' + error.message);\r\n    disableMicButton();\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to check connection with background script\r\nasync function checkConnection() {\r\n  try {\r\n    await chrome.runtime.sendMessage({ type: 'check_status' });\r\n    state.isConnected = true;\r\n    state.reconnectAttempts = 0;\r\n    return true;\r\n  } catch (error) {\r\n    console.warn('Connection error:', error);\r\n    state.isConnected = false;\r\n    \r\n    if (state.reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\r\n      state.reconnectAttempts++;\r\n      console.log(`Retrying connection... Attempt ${state.reconnectAttempts}`);\r\n      await new Promise(resolve => setTimeout(resolve, 1000 * state.reconnectAttempts));\r\n      return checkConnection();\r\n    } else {\r\n      updateStatus({\r\n        status: 'error',\r\n        data: 'Could not connect to extension. Please try reloading.'\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Listen for messages from the background script\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  console.log('Popup received message:', message);\r\n  state.isConnected = true;\r\n  updateStatus(message);\r\n});\r\n\r\nfunction updateStatus(message) {\r\n  const statusEl = document.getElementById('status');\r\n  const statusIndicator = document.getElementById('status-indicator');\r\n  const progressEl = document.getElementById('loading-progress');\r\n  \r\n  if (!statusEl || !statusIndicator) return;\r\n\r\n  statusIndicator.className = message.status;\r\n  \r\n  if (message.status === 'loading') {\r\n    statusEl.textContent = 'Loading model...';\r\n    if (message.progress) {\r\n      progressEl.textContent = `${message.progress.toFixed(1)}%`;\r\n    }\r\n  } else if (message.status === 'error') {\r\n    statusEl.textContent = `Error: ${message.data}`;\r\n    statusIndicator.className = 'error';\r\n    progressEl.textContent = '';\r\n  } else if (message.status === 'ready') {\r\n    statusEl.textContent = 'Model ready';\r\n    statusIndicator.className = 'ready';\r\n    progressEl.textContent = '';\r\n  }\r\n}\r\n\r\n// Enhanced initialization\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  console.log('Popup opened');\r\n  try {\r\n    await initializeUI();\r\n    await Promise.all([\r\n      initASR(),\r\n      checkConnection()\r\n    ]);\r\n    console.log('Initialization complete');\r\n\r\n    // Check model status\r\n    chrome.runtime.sendMessage({ type: 'check_status' }, (response) => {\r\n      if (chrome.runtime.lastError) {\r\n        console.error('Error checking status:', chrome.runtime.lastError);\r\n        return;\r\n      }\r\n      if (response?.status === 'ready') {\r\n        state.elements.statusDiv.textContent = 'Ready';\r\n      } else {\r\n        state.elements.statusDiv.textContent = 'Initializing...';\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Initialization failed:', error);\r\n    addLogEntry('error', 'Failed to initialize: ' + error.message);\r\n  }\r\n});\r\n\r\n// Clean up console logging override\r\nconst originalConsole = {\r\n  log: console.log,\r\n  error: console.error,\r\n  info: console.info\r\n};\r\n\r\nconsole.log = (...args) => addLogEntry('info', ...args);\r\nconsole.error = (...args) => addLogEntry('error', ...args);\r\nconsole.info = (...args) => addLogEntry('info', ...args);\r\n\r\n// Chat functionality\r\nfunction addMessage(content, isUser = false) {\r\n  const messageDiv = document.createElement('div');\r\n  messageDiv.className = `message ${isUser ? 'user' : 'assistant'}`;\r\n  messageDiv.textContent = content;\r\n  state.elements.chatMessages.appendChild(messageDiv);\r\n  state.elements.chatMessages.scrollTo(0, state.elements.chatMessages.scrollHeight);\r\n}\r\n\r\nasync function sendMessage() {\r\n  const text = state.elements.chatInput.value.trim();\r\n  if (!text) return;\r\n\r\n  // Check connection first\r\n  if (!state.isConnected && !await checkConnection()) {\r\n    const errorDiv = document.createElement('div');\r\n    errorDiv.className = 'message assistant error-message';\r\n    errorDiv.textContent = 'Not connected to extension. Please reload the popup.';\r\n    state.elements.chatMessages.appendChild(errorDiv);\r\n    return;\r\n  }\r\n\r\n  // Show loading state\r\n  const messageDiv = document.createElement('div');\r\n  messageDiv.className = 'message user';\r\n  messageDiv.textContent = text;\r\n  state.elements.chatMessages.appendChild(messageDiv);\r\n  \r\n  // Clear input and add loading indicator\r\n  state.elements.chatInput.value = '';\r\n  const loadingDiv = document.createElement('div');\r\n  loadingDiv.className = 'message assistant';\r\n  loadingDiv.innerHTML = '<span class=\"loading-spinner\"></span> Generating response...';\r\n  state.elements.chatMessages.appendChild(loadingDiv);\r\n  state.elements.chatMessages.scrollTo(0, state.elements.chatMessages.scrollHeight);\r\n  \r\n  try {\r\n    const response = await new Promise((resolve, reject) => {\r\n      chrome.runtime.sendMessage({\r\n        action: 'generate',\r\n        text: text\r\n      }, response => {\r\n        if (chrome.runtime.lastError) {\r\n          reject(new Error(chrome.runtime.lastError.message));\r\n          return;\r\n        }\r\n        resolve(response);\r\n      });\r\n    });\r\n    \r\n    // Remove loading indicator\r\n    loadingDiv.remove();\r\n    \r\n    if (response?.error) {\r\n      const errorDiv = document.createElement('div');\r\n      errorDiv.className = `message assistant error-message ${response.error.includes('memory') ? 'recoverable' : ''}`;\r\n      \r\n      // Format error message for users\r\n      let errorMessage = response.error;\r\n      if (response.error.includes('1879778072') || response.error.includes('memory')) {\r\n        errorMessage = 'The message was too long to process. Try sending a shorter message or breaking it into smaller parts.';\r\n      }\r\n      \r\n      errorDiv.textContent = errorMessage;\r\n      state.elements.chatMessages.appendChild(errorDiv);\r\n      \r\n      // Add memory usage warning if relevant\r\n      if (response.error.includes('memory')) {\r\n        const warningDiv = document.createElement('div');\r\n        warningDiv.className = 'memory-warning';\r\n        warningDiv.textContent = 'Tip: Keep messages under 2000 characters for best performance.';\r\n        state.elements.chatMessages.appendChild(warningDiv);\r\n      }\r\n    } else {\r\n      const responseDiv = document.createElement('div');\r\n      responseDiv.className = 'message assistant';\r\n      responseDiv.textContent = response;\r\n      state.elements.chatMessages.appendChild(responseDiv);\r\n    }\r\n  } catch (error) {\r\n    // Remove loading indicator\r\n    loadingDiv.remove();\r\n    \r\n    const errorDiv = document.createElement('div');\r\n    errorDiv.className = 'message assistant error-message';\r\n    errorDiv.textContent = 'Error: ' + (error.message || 'Could not connect to extension. Please try reloading.');\r\n    state.elements.chatMessages.appendChild(errorDiv);\r\n    console.error('Error sending message:', error);\r\n    \r\n    // Try to reconnect\r\n    checkConnection();\r\n  }\r\n  \r\n  state.elements.chatMessages.scrollTo(0, state.elements.chatMessages.scrollHeight);\r\n}\r\n\r\n// Speech recognition setup\r\nlet mediaRecorder = null;\r\nlet recordedChunks = [];\r\n\r\n// Function to toggle recording state\r\nasync function toggleRecording() {\r\n  try {\r\n    if (!state.mediaRecorder) {\r\n      // Request microphone access directly without permissions API\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        audio: {\r\n          channelCount: 1,\r\n          sampleRate: 16000\r\n        }\r\n      });\r\n      \r\n      state.mediaRecorder = new MediaRecorder(stream);\r\n      \r\n      state.mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          state.audioChunks.push(event.data);\r\n        }\r\n      };\r\n\r\n      state.mediaRecorder.onstop = async () => {\r\n        try {\r\n          const audioBlob = new Blob(state.audioChunks, { type: 'audio/webm' });\r\n          const audioBuffer = await audioBlob.arrayBuffer();\r\n          const audioData = new Float32Array(audioBuffer);\r\n          \r\n          chrome.runtime.sendMessage({\r\n            type: 'transcribe',\r\n            audio: Array.from(audioData)\r\n          });\r\n          \r\n          state.audioChunks = [];\r\n        } catch (error) {\r\n          console.error('Error processing audio:', error);\r\n          state.elements.statusDiv.textContent = `Error processing audio: ${error.message}`;\r\n        }\r\n      };\r\n\r\n      state.mediaRecorder.start();\r\n      state.elements.recordButton.querySelector('span').textContent = 'Stop';\r\n      state.elements.statusDiv.textContent = 'Recording...';\r\n    } else {\r\n      state.mediaRecorder.stop();\r\n      state.mediaRecorder = null;\r\n      state.elements.recordButton.querySelector('span').textContent = 'Record';\r\n      state.elements.statusDiv.textContent = 'Processing...';\r\n    }\r\n  } catch (error) {\r\n    console.error('Recording error:', error);\r\n    state.elements.statusDiv.textContent = `Error: ${error.message}`;\r\n  }\r\n}\r\n\r\nfunction cleanupWorker() {\r\n  if (state.worker) {\r\n    state.worker.terminate();\r\n    state.worker = null;\r\n  }\r\n}\r\n\r\nfunction enableMicButton() {\r\n  const micButton = document.getElementById('mic-button');\r\n  if (micButton) micButton.disabled = false;\r\n}\r\n\r\nfunction disableMicButton() {\r\n  const micButton = document.getElementById('mic-button');\r\n  if (micButton) micButton.disabled = true;\r\n}\r\n\r\nfunction updateChatInput(text) {\r\n  const chatInput = document.getElementById('chat-input');\r\n  if (chatInput) {\r\n    chatInput.value = (chatInput.value + ' ' + text).trim();\r\n  }\r\n}\r\n\r\nfunction updateTranscription(text) {\r\n  if (state.elements.chatInput) {\r\n    state.elements.chatInput.value = (state.elements.chatInput.value + ' ' + text).trim();\r\n  }\r\n  if (state.elements.transcriptionDiv) {\r\n    state.elements.transcriptionDiv.textContent = text;\r\n  }\r\n}\r\n\r\nfunction handleSendButton() {\r\n  const input = state.elements.chatInput;\r\n  if (!input || !input.value.trim()) return;\r\n  \r\n  const message = input.value.trim();\r\n  chrome.runtime.sendMessage({\r\n    type: 'send_message',\r\n    message\r\n  });\r\n  \r\n  input.value = '';\r\n}\r\n\r\n// Clean up resources when window closes\r\nwindow.addEventListener('unload', cleanupWorker);\r\n\r\n// Download and cache the Copilot avatar\r\nasync function cacheIcon() {\r\n  try {\r\n    const response = await fetch('https://avatars.githubusercontent.com/u/123265934');\r\n    const blob = await response.blob();\r\n    const iconUrl = URL.createObjectURL(blob);\r\n    const links = document.querySelectorAll('link[rel*=\"icon\"]');\r\n    links.forEach(link => {\r\n      link.href = iconUrl;\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to cache icon:', error);\r\n  }\r\n}\r\n\r\n// Listen for messages from background script\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === 'transcription') {\r\n    state.elements.transcriptionDiv.textContent = message.text;\r\n    state.elements.chatInput.value = message.text;\r\n  } else if (message.type === 'error') {\r\n    state.elements.statusDiv.textContent = `Error: ${message.error}`;\r\n  }\r\n});\r\n"],"names":["wasmPath","chrome","runtime","getURL","state","isConnected","reconnectAttempts","mediaRecorder","audioChunks","worker","elements","recording","MAX_RECONNECT_ATTEMPTS","addLogEntry","type","args","logMessages","entry","document","createElement","className","textContent","map","arg","JSON","stringify","join","appendChild","scrollTo","scrollHeight","initializeUI","Promise","resolve","reject","getElementById","Error","chatInput","sendButton","chatMessages","recordButton","statusDiv","transcriptionDiv","missingElements","Object","entries","filter","key","value","length","addEventListener","toggleRecording","handleSendButton","initASR","console","log","wasmBase","workerURL","Worker","name","timeout","setTimeout","cleanupWorker","onmessage","event","text","error","data","clearTimeout","enableMicButton","updateTranscription","updateStatus","status","progress","onerror","message","postMessage","disableMicButton","checkConnection","sendMessage","warn","onMessage","addListener","sender","sendResponse","statusEl","statusIndicator","progressEl","toFixed","all","response","lastError","originalConsole","info","addMessage","content","isUser","messageDiv","trim","errorDiv","loadingDiv","innerHTML","action","remove","includes","errorMessage","warningDiv","responseDiv","recordedChunks","stream","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","MediaRecorder","ondataavailable","size","push","onstop","audioBlob","Blob","audioBuffer","arrayBuffer","audioData","Float32Array","Array","from","start","querySelector","stop","terminate","micButton","disabled","updateChatInput","input","window","cacheIcon","fetch","blob","iconUrl","URL","createObjectURL","links","querySelectorAll","forEach","link","href"],"sourceRoot":""}