{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://browser-extension/./src/popup.js"],"sourcesContent":["// popup.js - handles interaction with the extension's popup UI\r\nimport { ACTION_NAME } from \"./constants.js\";\r\n\r\n// Initialize required globals as soon as module loads\r\n// Remove importScripts usage since it's not available in main context\r\nglobalThis.__TRANSFORMER_WORKER_WASM_PATH__ = chrome.runtime.getURL('wasm/');\r\nglobalThis.wasmEvalSupported = true;\r\n\r\n// Keep track of connection status\r\nlet isConnected = false;\r\nlet reconnectAttempts = 0;\r\nconst MAX_RECONNECT_ATTEMPTS = 3;\r\n\r\n// UI element references\r\nlet chatInput, sendButton, chatMessages, micButton, logMessages;\r\n\r\n// Initialize all UI references and handlers\r\nfunction initializeUI() {\r\n    chatInput = document.getElementById('chat-input');\r\n    sendButton = document.getElementById('send-button');\r\n    chatMessages = document.getElementById('chat-messages');\r\n    micButton = document.getElementById('mic-button');\r\n    logMessages = document.getElementById('log-messages');\r\n\r\n    if (sendButton) {\r\n        sendButton.disabled = false;\r\n        sendButton.addEventListener('click', sendMessage);\r\n    }\r\n\r\n    if (chatInput) {\r\n        chatInput.addEventListener('keypress', (e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault();\r\n                sendMessage();\r\n            }\r\n        });\r\n    }\r\n\r\n    if (micButton) {\r\n        micButton.disabled = true; // Initially disable mic button\r\n        micButton.addEventListener('click', () => {\r\n            if (!mediaRecorder || mediaRecorder.state === 'inactive') {\r\n                startRecording();\r\n            } else {\r\n                stopRecording();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Function to check connection with background script\r\nasync function checkConnection() {\r\n    try {\r\n        await chrome.runtime.sendMessage({ type: 'check_status' });\r\n        isConnected = true;\r\n        reconnectAttempts = 0;\r\n        return true;\r\n    } catch (error) {\r\n        console.warn('Connection error:', error);\r\n        isConnected = false;\r\n        \r\n        if (reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\r\n            reconnectAttempts++;\r\n            console.log(`Retrying connection... Attempt ${reconnectAttempts}`);\r\n            await new Promise(resolve => setTimeout(resolve, 1000 * reconnectAttempts));\r\n            return checkConnection();\r\n        } else {\r\n            updateStatus({\r\n                status: 'error',\r\n                data: 'Could not connect to extension. Please try reloading.'\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n// Listen for messages from the background script\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    console.log('Popup received message:', message);\r\n    isConnected = true;\r\n    updateStatus(message);\r\n});\r\n\r\nfunction updateStatus(message) {\r\n    const statusEl = document.getElementById('status');\r\n    const statusIndicator = document.getElementById('status-indicator');\r\n    const progressEl = document.getElementById('loading-progress');\r\n    \r\n    if (!statusEl || !statusIndicator) return;\r\n\r\n    statusIndicator.className = message.status;\r\n    \r\n    if (message.status === 'loading') {\r\n        statusEl.textContent = 'Loading model...';\r\n        if (message.progress) {\r\n            progressEl.textContent = `${message.progress.toFixed(1)}%`;\r\n        }\r\n    } else if (message.status === 'error') {\r\n        statusEl.textContent = `Error: ${message.data}`;\r\n        statusIndicator.className = 'error';\r\n        progressEl.textContent = '';\r\n    } else if (message.status === 'ready') {\r\n        statusEl.textContent = 'Model ready';\r\n        statusIndicator.className = 'ready';\r\n        progressEl.textContent = '';\r\n    }\r\n}\r\n\r\n// Enhanced initialization\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    console.log('Popup opened');\r\n    initializeUI();\r\n    \r\n    // Initial connection check\r\n    if (await checkConnection()) {\r\n        console.log('Connected to extension');\r\n    }\r\n    \r\n    // Set up periodic connection checks\r\n    setInterval(checkConnection, 5000);\r\n    \r\n    try {\r\n        await Promise.all([\r\n            initASR(),\r\n            cacheIcon()\r\n        ]);\r\n        console.log('Initialization complete');\r\n    } catch (error) {\r\n        console.error('Initialization failed:', error);\r\n        addLogEntry('error', 'Failed to initialize: ' + error.message);\r\n    }\r\n});\r\n\r\n// Console logging override\r\nconst originalConsole = {\r\n    log: console.log,\r\n    error: console.error,\r\n    info: console.info\r\n};\r\n\r\nfunction addLogEntry(type, ...args) {\r\n    const entry = document.createElement('div');\r\n    entry.className = `log-entry ${type}`;\r\n    entry.textContent = args.map(arg => \r\n        typeof arg === 'object' ? JSON.stringify(arg) : arg\r\n    ).join(' ');\r\n    logMessages?.appendChild(entry);\r\n    logMessages?.scrollTo(0, logMessages.scrollHeight);\r\n    return originalConsole[type](...args);\r\n}\r\n\r\nconsole.log = (...args) => addLogEntry('info', ...args);\r\nconsole.error = (...args) => addLogEntry('error', ...args);\r\nconsole.info = (...args) => addLogEntry('info', ...args);\r\n\r\n// Chat functionality\r\nfunction addMessage(content, isUser = false) {\r\n    const messageDiv = document.createElement('div');\r\n    messageDiv.className = `message ${isUser ? 'user' : 'assistant'}`;\r\n    messageDiv.textContent = content;\r\n    chatMessages.appendChild(messageDiv);\r\n    chatMessages.scrollTo(0, chatMessages.scrollHeight);\r\n}\r\n\r\nasync function sendMessage() {\r\n    const text = chatInput.value.trim();\r\n    if (!text) return;\r\n\r\n    // Check connection first\r\n    if (!isConnected && !await checkConnection()) {\r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.className = 'message assistant error-message';\r\n        errorDiv.textContent = 'Not connected to extension. Please reload the popup.';\r\n        chatMessages.appendChild(errorDiv);\r\n        return;\r\n    }\r\n\r\n    // Show loading state\r\n    const messageDiv = document.createElement('div');\r\n    messageDiv.className = 'message user';\r\n    messageDiv.textContent = text;\r\n    chatMessages.appendChild(messageDiv);\r\n    \r\n    // Clear input and add loading indicator\r\n    chatInput.value = '';\r\n    const loadingDiv = document.createElement('div');\r\n    loadingDiv.className = 'message assistant';\r\n    loadingDiv.innerHTML = '<span class=\"loading-spinner\"></span> Generating response...';\r\n    chatMessages.appendChild(loadingDiv);\r\n    chatMessages.scrollTo(0, chatMessages.scrollHeight);\r\n    \r\n    try {\r\n        const response = await new Promise((resolve, reject) => {\r\n            chrome.runtime.sendMessage({\r\n                action: 'generate',\r\n                text: text\r\n            }, response => {\r\n                if (chrome.runtime.lastError) {\r\n                    reject(new Error(chrome.runtime.lastError.message));\r\n                    return;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n        \r\n        // Remove loading indicator\r\n        loadingDiv.remove();\r\n        \r\n        if (response?.error) {\r\n            const errorDiv = document.createElement('div');\r\n            errorDiv.className = `message assistant error-message ${response.error.includes('memory') ? 'recoverable' : ''}`;\r\n            \r\n            // Format error message for users\r\n            let errorMessage = response.error;\r\n            if (response.error.includes('1879778072') || response.error.includes('memory')) {\r\n                errorMessage = 'The message was too long to process. Try sending a shorter message or breaking it into smaller parts.';\r\n            }\r\n            \r\n            errorDiv.textContent = errorMessage;\r\n            chatMessages.appendChild(errorDiv);\r\n            \r\n            // Add memory usage warning if relevant\r\n            if (response.error.includes('memory')) {\r\n                const warningDiv = document.createElement('div');\r\n                warningDiv.className = 'memory-warning';\r\n                warningDiv.textContent = 'Tip: Keep messages under 2000 characters for best performance.';\r\n                chatMessages.appendChild(warningDiv);\r\n            }\r\n        } else {\r\n            const responseDiv = document.createElement('div');\r\n            responseDiv.className = 'message assistant';\r\n            responseDiv.textContent = response;\r\n            chatMessages.appendChild(responseDiv);\r\n        }\r\n    } catch (error) {\r\n        // Remove loading indicator\r\n        loadingDiv.remove();\r\n        \r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.className = 'message assistant error-message';\r\n        errorDiv.textContent = 'Error: ' + (error.message || 'Could not connect to extension. Please try reloading.');\r\n        chatMessages.appendChild(errorDiv);\r\n        console.error('Error sending message:', error);\r\n        \r\n        // Try to reconnect\r\n        checkConnection();\r\n    }\r\n    \r\n    chatMessages.scrollTo(0, chatMessages.scrollHeight);\r\n}\r\n\r\n// Speech recognition setup\r\nlet worker = null;\r\nlet mediaRecorder = null;\r\nlet recordedChunks = [];\r\n\r\n// Initialize ASR when needed\r\nasync function initASR() {\r\n    if (worker) return; // Don't initialize if already running\r\n\r\n    try {\r\n        // Set the correct base URL for loading WASM files\r\n        const wasmPath = chrome.runtime.getURL('wasm/');\r\n        \r\n        worker = new Worker('asr-worker.js', { \r\n            type: 'module',\r\n            name: 'asr-worker'\r\n        });\r\n        \r\n        // Send WASM path to worker\r\n        worker.postMessage({ \r\n            type: 'init', \r\n            wasmPath \r\n        });\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            const timeout = setTimeout(() => {\r\n                cleanupWorker();\r\n                reject(new Error('ASR worker initialization timed out'));\r\n            }, 30000);\r\n\r\n            worker.onmessage = (event) => {\r\n                const { type, text, error, data } = event.data;\r\n                switch (type) {\r\n                    case 'ready':\r\n                        console.log('ASR worker ready');\r\n                        clearTimeout(timeout);\r\n                        enableMicButton();\r\n                        resolve();\r\n                        break;\r\n                    case 'transcription':\r\n                        updateChatInput(text);\r\n                        break;\r\n                    case 'loading':\r\n                        console.log('ASR loading progress:', data);\r\n                        break;\r\n                    case 'error':\r\n                        console.error('ASR error:', error);\r\n                        addLogEntry('error', 'ASR error: ' + error);\r\n                        break;\r\n                }\r\n            };\r\n\r\n            worker.onerror = (error) => {\r\n                console.error('ASR worker error:', error);\r\n                addLogEntry('error', 'ASR worker error: ' + error.message);\r\n                clearTimeout(timeout);\r\n                cleanupWorker();\r\n                reject(error);\r\n            };\r\n        });\r\n    } catch (error) {\r\n        console.error('Error initializing ASR:', error);\r\n        addLogEntry('error', 'Failed to initialize speech recognition: ' + error.message);\r\n        disableMicButton();\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction cleanupWorker() {\r\n    if (worker) {\r\n        worker.terminate();\r\n        worker = null;\r\n    }\r\n}\r\n\r\nfunction enableMicButton() {\r\n    const micButton = document.getElementById('mic-button');\r\n    if (micButton) micButton.disabled = false;\r\n}\r\n\r\nfunction disableMicButton() {\r\n    const micButton = document.getElementById('mic-button');\r\n    if (micButton) micButton.disabled = true;\r\n}\r\n\r\nfunction updateChatInput(text) {\r\n    const chatInput = document.getElementById('chat-input');\r\n    if (chatInput) {\r\n        chatInput.value = (chatInput.value + ' ' + text).trim();\r\n    }\r\n}\r\n\r\n// Clean up resources when window closes\r\nwindow.addEventListener('unload', cleanupWorker);\r\n\r\n// Download and cache the Copilot avatar\r\nasync function cacheIcon() {\r\n    try {\r\n        const response = await fetch('https://avatars.githubusercontent.com/u/123265934');\r\n        const blob = await response.blob();\r\n        const iconUrl = URL.createObjectURL(blob);\r\n        const links = document.querySelectorAll('link[rel*=\"icon\"]');\r\n        links.forEach(link => {\r\n            link.href = iconUrl;\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to cache icon:', error);\r\n    }\r\n}\r\n\r\nasync function requestMicrophonePermissions() {\r\n    try {\r\n        // Request audioCapture permission using Chrome extension API\r\n        const granted = await chrome.permissions.request({\r\n            permissions: ['audioCapture']\r\n        });\r\n        \r\n        if (granted) {\r\n            // After permission is granted, test the microphone\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            stream.getTracks().forEach(track => track.stop()); // Clean up test stream\r\n            return true;\r\n        } else {\r\n            addLogEntry('error', 'Microphone access was denied');\r\n            const instructions = document.createElement('div');\r\n            instructions.className = 'log-entry info';\r\n            instructions.innerHTML = `\r\n                To enable microphone access:\r\n                <ol>\r\n                    <li>Click the extension icon</li>\r\n                    <li>Click \"Manage\" (3-dot menu)</li>\r\n                    <li>Click \"Extension options\"</li>\r\n                    <li>Enable microphone access</li>\r\n                    <li>Refresh this page</li>\r\n                </ol>\r\n            `;\r\n            logMessages.appendChild(instructions);\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error checking permissions:', error);\r\n        addLogEntry('error', 'Failed to request microphone access: ' + error.message);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function startRecording() {\r\n    try {\r\n        // Check permissions first\r\n        const hasPermission = await requestMicrophonePermissions();\r\n        if (!hasPermission) {\r\n            micButton.classList.remove('recording');\r\n            return;\r\n        }\r\n\r\n        console.log('Requesting microphone access...');\r\n        const constraints = { \r\n            audio: {\r\n                channelCount: 1,\r\n                sampleRate: 16000\r\n            }\r\n        };\r\n        \r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        console.log('Microphone access granted:', stream.getAudioTracks()[0].getSettings());\r\n        \r\n        mediaRecorder = new MediaRecorder(stream, {\r\n            mimeType: 'audio/webm;codecs=opus'\r\n        });\r\n        console.log('MediaRecorder created with settings:', mediaRecorder.mimeType);\r\n        \r\n        mediaRecorder.ondataavailable = (event) => {\r\n            if (event.data.size > 0) {\r\n                recordedChunks.push(event.data);\r\n                console.log('Recorded chunk size:', event.data.size);\r\n            }\r\n        };\r\n        \r\n        mediaRecorder.onerror = (event) => {\r\n            console.error('MediaRecorder error:', event.error);\r\n        };\r\n        \r\n        mediaRecorder.onstop = async () => {\r\n            try {\r\n                console.log('Recording stopped, processing audio...');\r\n                const audioBlob = new Blob(recordedChunks, { type: 'audio/webm' });\r\n                console.log('Audio blob created, size:', audioBlob.size);\r\n                recordedChunks = [];\r\n                \r\n                // Convert audio to proper format for Whisper\r\n                const audioContext = new AudioContext({ sampleRate: 16000 });\r\n                const audioData = await audioBlob.arrayBuffer();\r\n                console.log('Audio data size:', audioData.byteLength);\r\n                \r\n                const audioBuffer = await audioContext.decodeAudioData(audioData);\r\n                console.log('Audio decoded, duration:', audioBuffer.duration);\r\n                \r\n                // Get audio data as Float32Array\r\n                const audio = audioBuffer.getChannelData(0);\r\n                console.log('Audio converted to Float32Array, length:', audio.length);\r\n                \r\n                // Send to worker for transcription\r\n                if (worker) {\r\n                    worker.postMessage({ buffer: audio });\r\n                    console.log('Audio sent to ASR worker');\r\n                } else {\r\n                    console.error('ASR worker not initialized');\r\n                }\r\n                \r\n                // Clean up\r\n                stream.getTracks().forEach(track => {\r\n                    track.stop();\r\n                    console.log('Audio track stopped:', track.label);\r\n                });\r\n                micButton.classList.remove('recording');\r\n                \r\n            } catch (error) {\r\n                console.error('Error processing recorded audio:', error);\r\n                if (error.name === 'InvalidStateError') {\r\n                    console.error('Audio context error - possible sample rate or format issue');\r\n                }\r\n                addLogEntry('error', 'Error processing audio:', error.message);\r\n            }\r\n        };\r\n        \r\n        mediaRecorder.start(1000); // Collect data in 1-second chunks\r\n        console.log('Recording started');\r\n        micButton.classList.add('recording');\r\n        \r\n    } catch (error) {\r\n        console.error('Error starting recording:', {\r\n            name: error.name,\r\n            message: error.message,\r\n            constraint: error.constraint,\r\n            stack: error.stack\r\n        });\r\n        \r\n        let errorMessage = 'Could not start recording: ';\r\n        if (error.name === 'NotAllowedError') {\r\n            // Don't show this message since we handle it in requestMicrophonePermissions\r\n            return;\r\n        } else if (error.name === 'NotFoundError') {\r\n            errorMessage += 'No microphone was found';\r\n        } else if (error.name === 'NotReadableError') {\r\n            errorMessage += 'Microphone is already in use by another application';\r\n        } else {\r\n            errorMessage += error.message || 'Unknown error';\r\n        }\r\n        \r\n        addLogEntry('error', errorMessage);\r\n        micButton.classList.remove('recording');\r\n    }\r\n}\r\n\r\nfunction stopRecording() {\r\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n        mediaRecorder.stop();\r\n    }\r\n}\r\n\r\n// Initialize ASR when popup is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    initASR();\r\n});\r\n"],"names":["ACTION_NAME","globalThis","__TRANSFORMER_WORKER_WASM_PATH__","chrome","runtime","getURL","wasmEvalSupported","isConnected","reconnectAttempts","MAX_RECONNECT_ATTEMPTS","chatInput","sendButton","chatMessages","micButton","logMessages","initializeUI","document","getElementById","disabled","addEventListener","sendMessage","e","key","shiftKey","preventDefault","mediaRecorder","state","startRecording","stopRecording","checkConnection","type","error","console","warn","log","Promise","resolve","setTimeout","updateStatus","status","data","onMessage","addListener","message","sender","sendResponse","statusEl","statusIndicator","progressEl","className","textContent","progress","toFixed","setInterval","all","initASR","cacheIcon","addLogEntry","originalConsole","info","args","entry","createElement","map","arg","JSON","stringify","join","appendChild","scrollTo","scrollHeight","addMessage","content","isUser","messageDiv","text","value","trim","errorDiv","loadingDiv","innerHTML","response","reject","action","lastError","Error","remove","includes","errorMessage","warningDiv","responseDiv","worker","recordedChunks","wasmPath","Worker","name","postMessage","timeout","cleanupWorker","onmessage","event","clearTimeout","enableMicButton","updateChatInput","onerror","disableMicButton","terminate","window","fetch","blob","iconUrl","URL","createObjectURL","links","querySelectorAll","forEach","link","href","requestMicrophonePermissions","granted","permissions","request","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","track","stop","instructions","hasPermission","classList","constraints","channelCount","sampleRate","getAudioTracks","getSettings","MediaRecorder","mimeType","ondataavailable","size","push","onstop","audioBlob","Blob","audioContext","AudioContext","audioData","arrayBuffer","byteLength","audioBuffer","decodeAudioData","duration","getChannelData","length","buffer","label","start","add","constraint","stack"],"sourceRoot":""}